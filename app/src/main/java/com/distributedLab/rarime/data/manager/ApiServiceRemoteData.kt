package com.distributedLab.rarime.data.manager

import android.util.Log
import com.distributedLab.rarime.BaseConfig
import com.distributedLab.rarime.contracts.ProofTX
import com.distributedLab.rarime.contracts.decodeTXResp
import com.distributedLab.rarime.contracts.parseProof
import com.distributedLab.rarime.domain.data.AirdropRequest
import com.distributedLab.rarime.domain.data.AirdropResponse
import com.distributedLab.rarime.domain.data.CosmosSpendableBalancesResponse
import com.distributedLab.rarime.domain.data.EvmTxResponse
import com.distributedLab.rarime.domain.data.RegisterRequest
import com.distributedLab.rarime.domain.manager.APIServiceManager
import javax.inject.Inject

class ApiServiceRemoteData @Inject constructor(private val apiServiceManager: APIServiceManager) {
    suspend fun sendRegistration(registerRequest: RegisterRequest): EvmTxResponse? {
        val response = apiServiceManager.registerRequest(registerRequest)

        if (response.isSuccessful) {
            return response.body()!!
        }
        return null
    }


    suspend fun sendQuery(query: AirdropRequest): AirdropResponse? {
        val response = apiServiceManager.airdrop(query)
        if (response.isSuccessful) {
            return response.body()!!
        }
        return null
    }

    @OptIn(ExperimentalStdlibApi::class)
    suspend fun getProof(key: ByteArray, address: String = BaseConfig.REGISTER_CONTRACT_ADDRESS): ProofTX? {
        val input = """{
        "jsonrpc": "2.0",
        "method": "eth_call",
        "params": [
        {
            "to": ${address},
            "data": "0x1b80bb3a000000000000000000000000${key.toHexString()}"
        },
        "latest"
        ],
        "id": 1
    }"""

        //val resp = apiServiceManager.getProof(input.toByteArray())


        //  val data = resp.execute().raw().body
        //Log.i("data", data.toString())
        val proof = parseProof(
            data = decodeTXResp(
                "0x00000000000000000000000000000000000000000000000000000000000000200097023164540c6b09e5cf64006eefe6ab25396068dee1b927a3a0ac0e25c3ca000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002a96efa19cf57a3a79431574d0a62899bbcd1a5300b21006524ba71759fec4082be2b4ff60623abae592dd9a2072666f98803d8d0000000000000000000000000000000000000000000000000000000000000001170302a92f4ae518280deb426ee64d0f0dabc5f8ef551fe7c55dfbd1508d9d6300b21006524ba71759fec4082be2b4ff60623abae592dd9a2072666f98803d8d00000000000000000000000000000000000000000000000000000000000000500e1b4a67ffcdf3922d0a5ba7c1d7738c658f696ad204754d304a68064e6d7ceb0503c67c73bf6e05ff866f9424c5f4aed47f3a4d4c713d1a64e77e0dc7d3f47024e3f9e17b0b6e80de8306ff66af30b18c9a1f8b24101411502fa3d98ea86b02079c811049a3295868af87f4eb413d68615e317ec686900ec6378af4e536b1c40000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
            )
        )

        Log.i("PROOF", proof.toString())

        return null

    }

    suspend fun fetchBalance(address: String): CosmosSpendableBalancesResponse? {
        val response = apiServiceManager.fetchBalance(address)

        if (response.isSuccessful) {
            return response.body()!!
        }

        return null
    }

}

